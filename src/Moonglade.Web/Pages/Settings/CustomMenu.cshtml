@page "/admin/settings/custom-menu"
@Html.AntiForgeryToken()
@{
    var settings = BlogConfig.CustomMenuSettings;

    <script>
        var needLoadInitValues = @((!string.IsNullOrWhiteSpace(settings.MenuJson)).ToString().ToLower());
    </script>
}

@section scripts{
    <script type="text/javascript" src="https://unpkg.com/monaco-editor@latest/min/vs/loader.js"></script>
    <script>
        require.config({ paths: { 'vs': 'https://unpkg.com/monaco-editor@latest/min/vs' } });
        // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites
        // the default worker url location (used when creating WebWorkers). The problem here is that
        // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of
        // a web worker through a same-domain script
        window.MonacoEnvironment = {
            getWorkerUrl: function (workerId, label) {
                return `data:text/javascript;charset=utf-8,${encodeURIComponent(`
                self.MonacoEnvironment = {
                  baseUrl: 'https://unpkg.com/monaco-editor@latest/min/'
                };
                importScripts('https://unpkg.com/monaco-editor@latest/min/vs/base/worker/workerMain.js');`
                )}`;
            }
        };

        var jsonContentEditor = null;

        require(['vs/editor/editor.main'], function () {
            initJsonEditor();
        });

        var initJsonEditor = function () {
            var jsonContentEditorDiv = document.getElementById('JsonContentEditor');
            jsonContentEditor = monaco.editor.create(jsonContentEditorDiv, {
                language: 'json'
            });
            jsonContentEditor.layout();

            if (needLoadInitValues) {
                var jsonValue = document.querySelector("#settings_MenuJson").value;
                window.jsonContentEditor.setValue(jsonValue);
            }
        }

        var assignEditorValues = function () {
            var jsonValue = window.jsonContentEditor.getValue();
            document.querySelector("#settings_MenuJson").value = jsonValue;
        }
    </script>
    <script type="module">
        import * as settings from '/js/app/admin.settings.module.js';

        function handleSubmit(event) {
            assignEditorValues();
            settings.handleSettingsSubmit(event);
        }

        const form = document.querySelector('#form-settings');
        form.addEventListener('submit', handleSubmit);
    </script>
}

@section head{
    <style>
        .monaco-target {
            border: 1px solid #dee2e6;
            width: 100%;
            min-height: 512px;
        }
    </style>
}

<partial name="_SettingsHeader" />
<div class="ps-4 pe-4">
    <form id="form-settings" asp-controller="Settings" asp-action="CustomMenu">
        <div class="form-check form-switch mb-3">
            <input type="hidden" name="IsEnabled" value="false">
            <input type="checkbox" name="IsEnabled" value="true" class="form-check-input" @(settings.IsEnabled ? "checked" : null)>
            <label asp-for="@settings.IsEnabled" class="form-check-label"></label>
        </div>

        <div id="JsonContentEditor" class="monaco-target">
        </div>
        <textarea asp-for="@settings.MenuJson" class="settings-jsoncontent-textarea d-none"></textarea>

        <div class="mt-3">
            <button type="submit" class="btn btn-outline-accent" id="btn-save-settings">
                @SharedLocalizer["Save"]
            </button>
        </div>
    </form>
</div>